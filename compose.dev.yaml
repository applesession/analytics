# docker-compose -f compose.dev.yaml up --build --watch
services:
  db:
    container_name: postgres_db
    image: postgres:15
    restart: unless-stopped
    ports:
      - '5432:5432'

    networks:
      - application
    volumes:
      - db_data:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 5s
      timeout: 2s
      retries: 20
  backend:
    container_name: analitika-backend
    build:
      context: ./backend
      target: development
    restart: unless-stopped
    ports:
      - '4200:4200'
    networks:
      - application

    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - node_modules/
        - path: ./backend/package.json
          action: rebuild
  frontend:
    container_name: analitika-frontend
    build:
      context: ./frontend
      target: development
      args:
        - VITE_SERVER_API=${VITE_SERVER_API}
    restart: unless-stopped
    ports:
      - '5173:5173'
    networks:
      - application
    environment:
      - VITE_SERVER_API
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_started
  prisma-studio:
    container_name: prisma-studio
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./backend:/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - '5555:5555'
    networks:
      - application
    depends_on:
      db:
        condition: service_healthy

networks:
  application:

volumes:
  db_data:
